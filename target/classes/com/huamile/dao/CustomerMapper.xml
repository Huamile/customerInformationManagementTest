<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huamile.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.huamile.mapper.Customer" >
    <id column="cusId" property="cusid" jdbcType="INTEGER" />
    <result column="cusName" property="cusname" jdbcType="VARCHAR" />
    <result column="cusAddress" property="cusaddress" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="cusTel" property="custel" jdbcType="VARCHAR" />
    <result column="cusEmail" property="cusemail" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cusId, cusName, cusAddress, contact, cusTel, cusEmail
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.huamile.mapper.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where cusId = #{cusid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where cusId = #{cusid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huamile.mapper.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huamile.mapper.Customer" >
    insert into customer (cusId, cusName, cusAddress, 
      contact, cusTel, cusEmail
      )
    values (#{cusid,jdbcType=INTEGER}, #{cusname,jdbcType=VARCHAR}, #{cusaddress,jdbcType=VARCHAR}, 
      #{contact,jdbcType=VARCHAR}, #{custel,jdbcType=VARCHAR}, #{cusemail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="cusid" parameterType="com.huamile.mapper.Customer" useGeneratedKeys="true">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cusid != null" >
        cusId,
      </if>
      <if test="cusname != null" >
        cusName,
      </if>
      <if test="cusaddress != null" >
        cusAddress,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="custel != null" >
        cusTel,
      </if>
      <if test="cusemail != null" >
        cusEmail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cusid != null" >
        #{cusid,jdbcType=INTEGER},
      </if>
      <if test="cusname != null" >
        #{cusname,jdbcType=VARCHAR},
      </if>
      <if test="cusaddress != null" >
        #{cusaddress,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="custel != null" >
        #{custel,jdbcType=VARCHAR},
      </if>
      <if test="cusemail != null" >
        #{cusemail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huamile.mapper.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.cusid != null" >
        cusId = #{record.cusid,jdbcType=INTEGER},
      </if>
      <if test="record.cusname != null" >
        cusName = #{record.cusname,jdbcType=VARCHAR},
      </if>
      <if test="record.cusaddress != null" >
        cusAddress = #{record.cusaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.custel != null" >
        cusTel = #{record.custel,jdbcType=VARCHAR},
      </if>
      <if test="record.cusemail != null" >
        cusEmail = #{record.cusemail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set cusId = #{record.cusid,jdbcType=INTEGER},
      cusName = #{record.cusname,jdbcType=VARCHAR},
      cusAddress = #{record.cusaddress,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      cusTel = #{record.custel,jdbcType=VARCHAR},
      cusEmail = #{record.cusemail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huamile.mapper.Customer" >
    update customer
    <set >
      <if test="cusname != null" >
        cusName = #{cusname,jdbcType=VARCHAR},
      </if>
      <if test="cusaddress != null" >
        cusAddress = #{cusaddress,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="custel != null" >
        cusTel = #{custel,jdbcType=VARCHAR},
      </if>
      <if test="cusemail != null" >
        cusEmail = #{cusemail,jdbcType=VARCHAR},
      </if>
    </set>
    where cusId = #{cusid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huamile.mapper.Customer" >
    update customer
    set cusName = #{cusname,jdbcType=VARCHAR},
      cusAddress = #{cusaddress,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      cusTel = #{custel,jdbcType=VARCHAR},
      cusEmail = #{cusemail,jdbcType=VARCHAR}
    where cusId = #{cusid,jdbcType=INTEGER}
  </update>
</mapper>